'use server'

import { GeminiService } from '@/lib/llm/gemini.service';
import { BookSummary } from '@/types/book.interface';

const llmService = new GeminiService(process.env.GEMINI_API_KEY!);

export async function generateBookContent(title: string, author: string): Promise<BookSummary | null> {
  try {
    const response = await llmService.generateBookSummary(title, author);
    if (response.error) throw new Error(response.error);
    
    const data = JSON.parse(response.content);
    return {
      book: {
        title,
        author,
        intro: "Generated by AI",
      },
      chapters: data.chapters,
    };
  } catch (error) {
    console.error('Error generating book content:', error);
    return null;
  }
}

export async function generateChapterContent(bookTitle: string, chapterTitle: string) {
  try {
    const response = await llmService.generateChapterContent(bookTitle, chapterTitle);
    if (response.error) throw new Error(response.error);
    return response.content;
  } catch (error) {
    console.error('Error generating chapter content:', error);
    return null;
  }
}
